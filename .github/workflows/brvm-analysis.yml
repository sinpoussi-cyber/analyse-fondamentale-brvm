name: Analyse Financière BRVM Quotidienne

on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

jobs:
  run-analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install blinker==1.6.2 selenium-wire gspread google-auth-oauthlib google-auth-httplib2 beautifulsoup4 requests python-docx pandas openpyxl pdfplumber

    - name: Run BRVM Financial Analysis Script
      env:
        GSPREAD_SERVICE_ACCOUNT: ${{ secrets.GSPREAD_SERVICE_ACCOUNT }}
      # CORRECTION : Mettez ici le nom EXACT de votre fichier python.
      # Par exemple, si votre fichier s'appelle 'main.py' :
      run: python main.py

    # NOUVEAU : Toujours tenter de sauvegarder les artefacts, surtout en cas d'échec
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      # La condition 'if: always()' assure que cette étape s'exécute même si la précédente échoue
      if: always()
      with:
        name: execution-artifacts
        # Sauvegarde le rapport .docx ET les fichiers de débogage s'ils existent
        path: |
          ./*.docx
          ./debug_*.png
          ./debug_*.html
