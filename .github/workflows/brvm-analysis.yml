name: Analyse Financière BRVM Quotidienne

# Déclenche le workflow tous les jours à 7h UTC
on:
  schedule:
    - cron: '0 7 * * *'
  # Permet aussi de le lancer manuellement depuis l'onglet Actions
  workflow_dispatch:

jobs:
  run-analysis:
    runs-on: ubuntu-latest

    steps:
    # 1. Récupère le code de votre dépôt
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Installe Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # 3. Installe les dépendances système (ChromeDriver)
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver

    # 4. Installe les bibliothèques Python
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install blinker==1.6.2 selenium-wire gspread google-auth-oauthlib google-auth-httplib2 beautifulsoup4 requests python-docx pandas openpyxl pdfplumber

    # 5. Exécute le script d'analyse
    - name: Run BRVM Financial Analysis Script
      env:
        # Passe le secret GitHub en tant que variable d'environnement
        GSPREAD_SERVICE_ACCOUNT: ${{ secrets.GSPREAD_SERVICE_ACCOUNT }}
      # Remplacez "votre_script.py" par le nom de votre fichier Python
      run: python votre_script.py 

    # 6. Sauvegarde le rapport Word généré comme un artefact
    - name: Upload Word Report Artifact
      uses: actions/upload-artifact@v3
      with:
        name: rapport-financier-brvm
        # Cherche tous les fichiers .docx générés
        path: ./*.docx
